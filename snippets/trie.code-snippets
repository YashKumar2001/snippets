{
	"trie": {
		"prefix": "trie",
		"body": [
		  "class Trie{",
		  "",
		  "    public:",
		  "    struct node",
		  "    {",
		  "	    int id,cnt,fin;",
		  "        int ch[26];",
		  "    };",
		  "    int sz;",
		  "    vector<node> t;",
		  "    Trie(){",
		  "        sz=1;",
		  "        t.resize(1e4);",
		  "    }",
		  "",
		  "    void insert(string &word){",
		  "        int v=0;",
		  "        for(auto c:word)",
		  "        {",
		  "            if(t[v].ch[c-'a']==0) t[v].ch[c-'a']=sz++;",
		  "            v=t[v].ch[c-'a'];",
		  "            t[v].cnt++;",
		  "        }",
		  "        t[v].fin++;",
		  "    }",
		  "",
		  "    int countWordsEqualTo(string &word){",
		  "        int v=0;",
		  "        for(auto c:word)",
		  "        {",
		  "            if(t[v].ch[c-'a']==0) t[v].ch[c-'a']=sz++;",
		  "            v=t[v].ch[c-'a'];",
		  "        }",
		  "        return t[v].fin;",
		  "    }",
		  "",
		  "    int countWordsStartingWith(string &word){",
		  "        int v=0;",
		  "        for(auto c:word)",
		  "        {",
		  "            if(t[v].ch[c-'a']==0) t[v].ch[c-'a']=sz++;",
		  "            v=t[v].ch[c-'a'];",
		  "        }",
		  "        return t[v].cnt;",
		  "    }",
		  "",
		  "    void erase(string &word){",
		  "        int v=0;",
		  "        for(auto c:word)",
		  "        {",
		  "            if(t[v].ch[c-'a']==0) t[v].ch[c-'a']=sz++;",
		  "            v=t[v].ch[c-'a'];",
		  "            t[v].cnt--;",
		  "        }",
		  "        t[v].fin--;",
		  "    }",
		  "};",
		  ""
		],
		"description": "trie"
	  }
}